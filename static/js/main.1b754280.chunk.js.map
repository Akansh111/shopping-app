{"version":3,"sources":["store/action.js","components/ProductCategory/index.js","components/ProductCard/index.js","server/index.js","screens/Product/index.js","components/LoginComponent/index.js","screens/Login/index.js","screens/MainLayout/Footer.js","components/Cart/index.js","screens/MainLayout/Header.js","screens/MainLayout/index.js","components/RegisterComponent/index.js","screens/Register/index.js","store/reducer.js","store/store.js","App.js","index.js"],"names":["USER_LOGGED_IN","UPDATE_CART_ITEM","REMOVE_CART_ITEM","SET_FILTER","isUserLoggedIn","payload","type","updateCart","setFilter","ProductCategory","category","filter","useSelector","state","dispatch","useDispatch","className","length","map","item","enabled","style","color","id","onClick","categoryId","name","ProductCard","product","alert","useAlert","handleClick","useCallback","success","src","imageURL","alt","description","price","get","url","a","axios","response","Product","useState","data","setData","categories","setCategories","useEffect","then","role","display","justifyContent","flexWrap","padding","margin","listStyle","LoginComponent","history","useHistory","onSubmit","values","setSubmitting","registeredUser","JSON","parse","localStorage","getItem","setTimeout","console","log","email","password","firstName","push","error","initialValues","validationSchema","Yup","shape","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","autoComplete","placeholder","value","onChange","onBlur","htmlFor","disabled","Login","Footer","Cart","closeCart","cart","onClose","handleCartUpdate","handleCartRemove","removeCart","handleCheckout","qty","reduce","total","Header","openCart","setOpenCart","handleRedirect","route","toggleCart","dispatchUserLogout","MainLayout","children","RegisterComponent","lastName","confirmPassword","setItem","stringify","oneOf","props","Register","appState","reducer","action","find","e","ele","concat","findItem","element","store","createStore","composeWithDevTools","App","path","exact","component","render","to","options","timeout","position","positions","BOTTOM_CENTER","ReactDOM","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.1b754280.chunk.js","sourcesContent":["export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const UPDATE_CART_ITEM = \"UPDATE_CART_ITEM\";\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\nexport const SET_FILTER = \"SET_FILTER\";\n\nexport const isUserLoggedIn = (payload = null) => {\n  return {\n    type: USER_LOGGED_IN,\n    payload: payload\n  }\n}\n\nexport const updateCart = (payload = null) => {\n  return {\n    type: UPDATE_CART_ITEM,\n    payload: payload,\n  };\n};\n\nexport const removeCart = (payload = null) => {\n  return {\n    type: REMOVE_CART_ITEM,\n    payload: payload,\n  };\n};\n\nexport const setFilter = (payload = null) => {\n  return {\n    type: SET_FILTER,\n    payload: payload,\n  };\n};\n\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { setFilter } from \"../../store/action\";\n\nimport \"./ProductCategory.scss\";\n\nconst ProductCategory = ({ category }) => {\n  const { filter } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleFilter = (categoryId) => () => {\n    if (categoryId !== filter) {\n      dispatch(setFilter(categoryId));\n    } else {\n      dispatch(setFilter(null));\n    }\n  };\n\n  return (\n    <aside className=\"product-category\">\n      <ul>\n        {category.length\n          ? category.map(\n              (item) =>\n                item.enabled && (\n                  <li\n                    key={item.id}\n                    style={{ color: item.id === filter ? \"red\" : \"black\" }}\n                    onClick={handleFilter(item.id)}\n                  >\n                    {item.name}\n                  </li>\n                )\n            )\n          : null}\n      </ul>\n    </aside>\n  );\n};\n\nexport default ProductCategory;\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\n\nimport \"./ProductCard.scss\";\nimport { updateCart } from \"../../store/action\";\n\nconst ProductCard = ({ product }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const handleClick = useCallback(() => {\n    dispatch(updateCart(product));\n    alert.success(\"Product added to cart succesfully!\");\n  }, [alert, dispatch, product]);\n\n  return (\n    <li className=\"product-cards\" id={product.category}>\n      <h2 className=\"product-name truncate\">{product.name}</h2>\n      <img src={product.imageURL} alt={product.name} className=\"product-img\" />\n      <p className=\"product-desc\">{product.description}</p>\n      <button className=\"btn-cta mobile tablet\" onClick={handleClick}>\n        Buy Now @ Rs. {product.price}\n      </button>\n      <div className=\"product-cta-container\">\n        <span className=\"product-price\">MRP Rs. {product.price}</span>\n        <button onClick={handleClick} className=\"btn-cta\">\n          Buy Now\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ProductCard;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://akansh111.github.io/shopping-app/\";\n\nexport const get = async (url) => {\n  try {\n    const response = await axios.get(`${BASE_URL}${url}`);\n    return response;\n  } catch (e) {\n    return e;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport ProductCategory from \"../../components/ProductCategory\";\nimport ProductCard from \"../../components/ProductCard\";\nimport { get } from \"../../server\";\n\nconst Product = () => {\n  const [data, setData] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const { filter } = useSelector((state) => state);\n\n  useEffect(() => {\n    get(\"products\").then(({ data }) => {\n      setData(data);\n    });\n    get(\"categories\").then(({ data }) => {\n      setCategories(data);\n    });\n  }, []);\n\n  return (\n    <main\n      className=\"product container\"\n      id=\"products-list-container\"\n      role=\"main\"\n    >\n      <ProductCategory category={categories} />\n      <section\n        id=\"products-cards-container\"\n        className=\"product-cards-container\"\n      >\n        <ul\n          className=\"product-list\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            flexWrap: \"wrap\",\n            padding: 0,\n            margin: 0,\n            listStyle: \"none\",\n          }}\n        >\n          {filter === null && data.length > 0\n            ? data.map((item) => <ProductCard product={item} key={item.id} />)\n            : data\n                .filter((item) => item.category === filter)\n                .map((item) => <ProductCard product={item} key={item.id} />)}\n        </ul>\n      </section>\n    </main>\n  );\n};\n\nexport default Product;\n","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAlert } from \"react-alert\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./LoginComponent.scss\";\nimport { isUserLoggedIn } from \"../../store/action\";\n\nconst LoginComponent = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const onSubmit = useCallback(\n    (values, { setSubmitting }) => {\n      const registeredUser = JSON.parse(localStorage.getItem(\"registeredUser\"));\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n        if (\n          registeredUser.email === values.email &&\n          registeredUser.password === values.password\n        ) {\n          dispatch(isUserLoggedIn(registeredUser.firstName));\n          alert.success(\"User logged in successfully!\");\n          history.push(`/`);\n        } else if (\n          registeredUser.email === values.email &&\n          registeredUser.password !== values.password\n        ) {\n          alert.error(\"Invalid Credentials. Please try again!\");\n          history.push(`/login`);\n        } else {\n          alert.error(\"User not registered. Please register the user first!\");\n          history.push(`/register`);\n        }\n      }, 500);\n    },\n    [dispatch, alert, history]\n  );\n\n  return (\n    <section className=\"login-section\">\n      <div className=\"login-section_info\">\n        <h1 className=\"login-section-heading\">Login</h1>\n      </div>\n      <div className=\"login-section_formGroup\">\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          onSubmit={onSubmit}\n          validationSchema={Yup.object().shape({\n            email: Yup.string().email().required(\"Email is required\"),\n            password: Yup.string()\n              .required(\"Password is required\")\n              .min(6, \"Password is too short - should be 6 chars minimum.\")\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n          })}\n        >\n          {({\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n          }) => {\n            return (\n              <form\n                onSubmit={handleSubmit}\n                autoComplete=\"off\"\n                className=\"login-section_form\"\n                aria-label=\"form\"\n              >\n                <div className=\"field\">\n                  <input\n                    aria-required=\"true\"\n                    aria-labelledby=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"Enter your email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"email\" id=\"email\">\n                    Email *\n                  </label>\n                </div>\n\n                {errors.email && touched.email && (\n                  <span className=\"error-text\">{errors.email}</span>\n                )}\n                <div className=\"field\">\n                  <input\n                    aria-required=\"true\"\n                    aria-labelledby=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"password\" id=\"password\">\n                    Password *\n                  </label>\n                </div>\n\n                {errors.password && touched.password && (\n                  <span className=\"error-text\">{errors.password}</span>\n                )}\n                <input\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"btn--login\"\n                  value=\"Login\"\n                />\n              </form>\n            );\n          }}\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginComponent;\n","import React from \"react\";\n\nimport LoginComponent from \"../../components/LoginComponent\";\n\nconst Login = () => {\n  return <LoginComponent />;\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <span>\n        Copyright &copy; 2011-2021 Sabka Bazaar Grocery Supplies Pvt Ltd.\n      </span>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useCallback } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { updateCart, removeCart } from \"../../store/action\";\n\nimport \"./Cart.scss\";\n\nconst Cart = ({ closeCart }) => {\n  const { item, cart, isUserLoggedIn } = useSelector((state) => state || {});\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const onClose = useCallback(() => {\n    closeCart(false);\n  }, [closeCart]);\n\n  const handleCartUpdate = useCallback(\n    (item) => () => {\n      dispatch(updateCart(item));\n    },\n    [dispatch]\n  );\n\n  const handleCartRemove = useCallback(\n    (item) => () => {\n      dispatch(removeCart(item));\n    },\n    [dispatch]\n  );\n\n  const handleCheckout = useCallback(() => {\n    if (isUserLoggedIn === '') {\n      alert.error(\"Please login before checking out!\")\n    } else {\n      onClose();\n      alert.success(\"Order placed successfully!\")\n    }\n  }, [alert, isUserLoggedIn, onClose])\n\n  return (\n    <div className=\"cart-container\">\n      <div className=\"header-container\">\n        <h1 className=\"heading\">\n          My cart {item > 0 ? `( ${item} Item )` : null}\n        </h1>\n        <button className=\"btn-close\" onClick={onClose} />\n      </div>\n\n      <ul className=\"cart_list\">\n        {cart.length > 0 ? (\n          cart.map((item) => (\n            <li className=\"cart_list-item\" key={item.id}>\n              <img\n                src={item.imageURL}\n                className=\"cart_list-img\"\n                alt={item.name}\n              />\n              <div className=\"cart_list-details\">\n                <h2 className=\"cart_list-name truncate\">{item.name}</h2>\n                <button\n                  className=\"btn-decrement\"\n                  onClick={handleCartRemove(item)}\n                >\n                  -\n                </button>\n                <span className=\"quantity\">{item.qty}</span>\n                <button\n                  className=\"btn-increment\"\n                  onClick={handleCartUpdate(item)}\n                >\n                  +\n                </button>\n                <span className=\"into-qty\">X</span>\n                <span className=\"cart_list-price\">₹ {item.price}</span>\n                <span className=\"cart_list-item-total\">\n                  ₹ {item.qty * item.price}\n                </span>\n              </div>\n            </li>\n          ))\n        ) : (\n          <div className=\"no-item-text\">\n            <b>No items in your cart</b>\n            <p>Your favourite items are just a click away</p>\n          </div>\n        )}\n      </ul>\n\n      <div className=\"checkout\">\n        <p className=\"checkout-heading\">\n          Promo code can be applied on the checkout page.\n        </p>\n        {item > 0 ? (\n          <button\n            type=\"button\"\n            name=\"button\"\n            className=\"btn-cart-checkout checkout-button\"\n            onClick={handleCheckout}\n          >\n            <span className=\"checkout-text\">Proceed to checkout</span>\n            <span className=\"checkout-price\">\n              {\" \"}\n              Rs.{\" \"}\n              {cart.reduce(function (total, item) {\n                return total + item.price * item.qty;\n              }, 0)}\n            </span>\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            name=\"button\"\n            className=\"btn-cart-checkout checkout-button\"\n            onClick={onClose}\n          >\n            <span className=\"checkout-text\">Start Shopping</span>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","import { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { isUserLoggedIn as dispatchUserLogout } from \"../../store/action\";\n\nimport Cart from \"../../components/Cart\";\nimport \"./header.scss\";\nimport { useAlert } from \"react-alert\";\n\nconst Header = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [openCart, setOpenCart] = useState(false);\n  const { item, isUserLoggedIn } = useSelector((state) => state);\n\n  const handleRedirect = useCallback(\n    (route) => () => history.push(route),\n    [history]\n  );\n\n  const handleLogout = () => {\n    dispatch(dispatchUserLogout(''));\n    alert.success(\"User logged out successfully\");\n    handleRedirect(\"/\")\n  }\n  const toggleCart = useCallback(() => setOpenCart(!openCart), [openCart]);\n  return (\n    <header>\n      <div className=\"navigation\" role=\"navigation\">\n        <div onClick={handleRedirect(\"/\")}>\n          <img className=\"logo-img\" src=\"static/images/logo.png\" alt=\"logo\" />\n        </div>\n        <div className=\"cart-login-container\">\n          <nav>\n            {isUserLoggedIn === '' ? (\n              <ul className=\"list-h\">\n                <li className=\"link\">\n                  <button onClick={handleRedirect(\"/login\")}>SignIn</button>\n                </li>\n                <li className=\"link\">\n                  <button onClick={handleRedirect(\"/register\")}>\n                    Register\n                  </button>\n                </li>\n              </ul>\n            ) : (\n              <ul className=\"list-h\">\n                {`Welcome ${isUserLoggedIn}!`}\n                <li className=\"link\">\n                  <button onClick={handleLogout}>\n                    Logout\n                  </button>\n                </li>\n              </ul>\n            )}\n          </nav>\n          <button className=\"btn-cart\" onClick={toggleCart}>\n            <img\n              src=\"static/images/cart.svg\"\n              alt=\"cart icon\"\n              className=\"icon\"\n              id=\"outside\"\n            />\n            <span className=\"text\" id=\"cart-items\">\n              {item} Items\n            </span>\n          </button>\n          <div\n            id=\"desktop-cart\"\n            className=\"cart-main-cont\"\n            style={{ display: openCart ? \"block\" : \"none\" }}\n          >\n            <Cart closeCart={toggleCart} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst MainLayout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      {children}\n      <Footer />\n    </>\n  );\n};\n\nexport default MainLayout;\n","import { useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAlert } from \"react-alert\";\n\nimport \"../LoginComponent/LoginComponent.scss\";\n\nconst RegisterComponent = () => {\n  const history = useHistory();\n  const alert = useAlert();\n\n  return (\n    <section className=\"signup-section\">\n      <div className=\"signup-section_info\">\n        <h1 className=\"login-section-heading\">Signup</h1>\n        <div className=\"login-section-desc\"><br />\n          We do not share your personal details anywhere.\n        </div>\n      </div>\n      <div className=\"login-section_formGroup\">\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              console.log(\"Logging in\", values);\n              localStorage.setItem('registeredUser', JSON.stringify(values));\n              alert.success(\"User registered Successfully! Please login\");\n              setSubmitting(false);\n              history.push(`/login`);\n\n            }, 500);\n          }}\n          validationSchema={Yup.object().shape({\n            firstName: Yup.string()\n              .required(\"First Name is required\")\n              .min(3, \"First Name is too short - should be 3 chars minimum.\"),\n            lastName: Yup.string()\n              .required(\"Last Name is required\")\n              .min(1, \"Last Name is too short - should be 1 chars minimum.\"),\n            email: Yup.string().email().required(\"Email is required\"),\n            password: Yup.string()\n              .required(\"Password is required\")\n              .min(6, \"Password is too short - should be 6 chars minimum.\")\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n            confirmPassword: Yup.string()\n              .required(\"Confirm Password is required\")\n              .min(\n                6,\n                \"Confirm Password is too short - should be 6 chars minimum.\"\n              )\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n              .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n          })}\n        >\n          {(props) => {\n            const {\n              values,\n              touched,\n              errors,\n              isSubmitting,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            } = props;\n            return (\n              <form\n                onSubmit={handleSubmit}\n                autoComplete=\"off\"\n                className=\"signup-section_form\"\n                aria-label=\"form\"\n              >\n                <div className=\"field\">\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    id=\"firstName\"\n                    placeholder=\"First Name\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"firstName\" id=\"firstName\">\n                    First Name*\n                  </label>\n                </div>\n                {errors.firstName && touched.firstName && (\n                  <span style={{ color: \"red\" }}>{errors.firstName}</span>\n                )}\n                <div className=\"field\">\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    id=\"lastName\"\n                    placeholder=\"Last Name\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"lastName\" id=\"lastName\">\n                    Last Name*\n                  </label>\n                </div>\n                {errors.lastName && touched.lastName && (\n                  <span style={{ color: \"red\" }}>{errors.lastName}</span>\n                )}\n                <div className=\"field\">\n                  <input\n                    name=\"email\"\n                    id=\"email\"\n                    type=\"text\"\n                    placeholder=\"Enter your email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"email\" id=\"email\">\n                    Email*\n                  </label>\n                </div>\n                {errors.email && touched.email && (\n                  <span style={{ color: \"red\" }}>{errors.email}</span>\n                )}\n                <div className=\"field\">\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"password\" id=\"password\">\n                    Password*\n                  </label>\n                </div>\n                {errors.password && touched.password && (\n                  <span style={{ color: \"red\" }}>{errors.password}</span>\n                )}\n\n                <div className=\"field\">\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    id=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    value={values.confirmPassword}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <label htmlFor=\"confirmPassword\" id=\"confirmPassword\">\n                    Confirm Password*\n                  </label>\n                </div>\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <span style={{ color: \"red\" }}>{errors.confirmPassword}</span>\n                )}\n                <input\n                  type=\"submit\"\n                  className=\"btn--signup\"\n                  disabled={isSubmitting}\n                  name=\"submit\"\n                  value=\"SignUp\"\n                />\n              </form>\n            );\n          }}\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterComponent;\n","import React from \"react\";\n\nimport RegisterComponent from \"../../components/RegisterComponent\";\n\nconst Register = () => {\n  return <RegisterComponent />;\n};\n\nexport default Register;\n","import get from \"lodash/get\";\nimport { UPDATE_CART_ITEM, REMOVE_CART_ITEM, SET_FILTER, USER_LOGGED_IN } from \"./action\";\n\nconst appState = {\n  item: 0,\n  cart: [],\n  filter: null,\n  isUserLoggedIn: ''\n};\n\nconst reducer = (state = appState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case UPDATE_CART_ITEM:\n      if (state.cart.find((e) => e.id === get(payload, \"id\"))) {\n        return {\n          ...state,\n          item: state.item + 1,\n          cart: state.cart.map((ele) => {\n            if (ele.id === get(payload, \"id\")) {\n              return { ...ele, qty: ele.qty + 1 };\n            }\n            return ele;\n          }),\n        };\n      } else {\n        return {\n          ...state,\n          item: state.item + 1,\n          cart: state.cart.concat({ ...payload, qty: 1 }),\n        };\n      }\n\n    case REMOVE_CART_ITEM:\n      const findItem = state.cart.find(\n        (element) => element.id === get(payload, \"id\")\n      );\n      if (findItem) {\n        if (findItem.qty > 1) {\n          return {\n            ...state,\n            item: state.item - 1,\n            cart: state.cart.map((ele) => {\n              if (ele.id === get(payload, \"id\")) {\n                return { ...ele, qty: ele.qty - 1 };\n              }\n              return ele;\n            }),\n          };\n        } else {\n          return {\n            ...state,\n            item: state.item - 1,\n            cart: state.cart.filter((ele) => ele.id !== get(payload, \"id\")),\n          };\n        }\n      } else {\n        console.log(\"Item cannot be identified !\");\n        return { ...state };\n      }\n\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: payload,\n      };\n    case USER_LOGGED_IN:\n      return {\n        ...state,\n        isUserLoggedIn: payload\n      }\n    default:\n      return appState;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(reducer, composeWithDevTools());\n\nexport default store;\n","import { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport Product from \"./screens/Product\";\nimport Login from \"./screens/Login\";\nimport MainLayout from \"./screens/MainLayout\";\nimport Register from \"./screens/Register\";\nimport store from \"./store/store\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <MainLayout>\n          <Switch>\n            <Route path=\"/\" exact component={Product} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n            <Route path=\"/\" render={() => <Redirect to=\"/\" />} />\n          </Switch>\n        </MainLayout>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { positions, Provider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n\n};\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider template={AlertTemplate} {...options}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}